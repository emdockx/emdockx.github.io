layout(annotations = list(list(x = max(data_plot_swimming_time$num)+0.50, y = mean(data_plot_swimming_time$time, na.rm = TRUE), xanchor = "right", yanchor = "bottom", text = paste0("Average: ", round(mean(data_plot_swimming_time$time, na.rm = TRUE), 0), " min"), showarrow = FALSE, font = list(color = "white", size = 12)))) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#3498db"),
annotations = list(
list(x = 0.05, y = 0.95, xref = "paper", yref = "paper",
text = "<span style='color:#00bc8c; border:1px solid black;'>&#9632;</span> <span style='color:#00bc8c'>Most recent session</span><br><span style='color:#3498db'>&#9632;</span> <span style='color:#3498db'>All other sessions</span>",
showarrow = FALSE, font = list(size = 15), xanchor = "left", yanchor = "top", align = "left")),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color="#3498db"), ticksuffix = " min", fixedrange = TRUE, title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25),
margin = list(l = 0, r = 0, t = 0, b = 0))
##--------##
##--PACE--##
##--------##
data_plot_swimming_pace <- df_swimming_365 %>% arrange(desc(pace)) %>% mutate(pace = pace/10, distance = distance, time = time / 60, num = row_number())
colors_pace_swimming <- ifelse(data_plot_swimming_pace$id == max(data_plot_swimming_pace$id), "#00bc8c", "#3498db")
plot_pace_swimming <- plot_ly(data = data_plot_swimming_pace, x = ~num, y = ~pace, type = "scatter",
marker = list(color = ~colors_pace_swimming, size = 12.5, line = list(color = "black", width = 1)), mode = "markers",
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>Distance:", round(distance, 1), "m", "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/100m"), "<br>Speed:", paste0(round(df_swimming_365$speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
add_lines(x = c(min(data_plot_swimming_pace$num)-0.5, max(data_plot_swimming_pace$num)+0.5), y = rep(mean(data_plot_swimming_pace$pace, na.rm = TRUE), 2), line = list(color = "white", width = 0.25, dash = "dot"), showlegend = FALSE, hoverinfo = "skip", inherit = FALSE) |>
layout(annotations = list(list(x = max(data_plot_swimming_pace$num)+0.50, y = mean(data_plot_swimming_pace$pace, na.rm = TRUE), xanchor = "right", yanchor = "bottom", text = paste0("Average: ", paste0(floor(pace <- mean(data_plot_swimming_pace$pace, na.rm = TRUE)), ":", ifelse(round((mean(data_plot_swimming_pace$pace, na.rm = TRUE) %% 1) * 60) < 10, paste0("0", round((mean(data_plot_swimming_pace$pace, na.rm = TRUE) %% 1) * 60)), round((mean(data_plot_swimming_pace$pace, na.rm = TRUE) %% 1) * 60))), "/100m"), showarrow = FALSE, font = list(color = "white", size = 12)))) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#3498db"),
annotations = c(
list(list(x = 0.95, y = 0.95, xref = "paper", yref = "paper",
text = "<span style='color:#00bc8c'>Most recent session</span> <span style='color:#00bc8c; border:1px solid black;'>&#x25CF;</span><br><span style='color:#3498db'>All other sessions</span> <span style='color:#3498db'>&#x25CF;</span>",
showarrow = FALSE, font = list(size = 15), xanchor = "right", yanchor = "top", align = "right"))),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color="#3498db"), title = NA, fixedrange = TRUE, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25,
range = c(1, 5), tickvals = seq(1, 5, by = 0.5), ticktext = c("1:00 min/100m", "1:30 min/100m", "2:00 min/100m", "2:30 min/100m", "3:00 min/100m", "3:30 min/100m", "4:00 min/100m", "4:30 min/100m", "5:00 min/100m")),
margin = list(l = 0, r = 0, t = 0, b = 0))
##------##
##--HR--##
##------##
data_plot_swimming_hr <- df_swimming_365 %>% arrange((hr)) %>% mutate(pace = pace/10, distance = distance, time = time / 60, num = row_number())
colors_hr_swimming <- ifelse(data_plot_swimming_hr$id == max(data_plot_swimming_hr$id), "#00bc8c", "#3498db")
hr1 <- 138; hr2 <- 150; hr3 <- 162; hr4 <- 174
plot_hr_swimming <- plot_ly(data = data_plot_swimming_hr, x = ~num, y = ~hr, type = "scatter",
marker = list(color = ~colors_hr_swimming, size = 12.5, line = list(color = "black", width = 1)), mode = "markers",
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>Distance:", round(distance, 1), "m", "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/100m"), "<br>Speed:", paste0(round(df_swimming_365$speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
add_lines(x = c(min(data_plot_swimming_hr$num)-0.5, max(data_plot_swimming_hr$num)+0.5), y = rep(mean(data_plot_swimming_hr$hr, na.rm = TRUE), 2), line = list(color = "white", width = 0.25, dash = "dot"), showlegend = FALSE, hoverinfo = "skip", inherit = FALSE) |>
layout(annotations = list(list(x = max(data_plot_swimming_hr$num)+0.50, y = mean(data_plot_swimming_hr$hr, na.rm = TRUE), xanchor = "right", yanchor = "top", text = paste0("Average: ", round(mean(data_plot_swimming_hr$hr, na.rm = TRUE), 0), " bpm"), showarrow = FALSE, font = list(color = "white", size = 12)))) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#3498db"),
annotations = c(
list(list(x = 0.075, y = 0.95, xref = "paper", yref = "paper",
text = "<span style='color:#00bc8c; border:1px solid black;'>&#x25CF;</span> <span style='color:#00bc8c'>Most recent session</span><br><span style='color:#3498db'>&#x25CF;</span> <span style='color:#3498db'>All other sessions</span>",
showarrow = FALSE, font = list(size = 15), xanchor = "left", yanchor = "top", align = "left"),
list(x = 0.025, y = (min(data_plot_swimming_hr$hr)-5+hr1)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 1</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr1+hr2)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 2</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr2+hr3)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 3</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr3+hr4)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 4</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"),
list(x = 0.025, y = (hr4+max(data_plot_swimming_hr$hr_max)+5)/2-0.5, xref = "paper", yref = "y", text = "<i><span style='color:#424242'>Zone 5</span></i>", showarrow = FALSE, font = list(size = 10), xanchor = "right"))),
shapes = lapply(1:nrow(data_plot_swimming_hr), function(i) {
list(type = "line",
x0 = data_plot_swimming_hr$num[i], x1 = data_plot_swimming_hr$num[i],
y0 = data_plot_swimming_hr$hr[i], y1 = data_plot_swimming_hr$hr_max[i],
line = list(color = ifelse(i == match(max(data_plot_swimming_hr$id), data_plot_swimming_hr$id),
rgb(col2rgb("#00bc8c")[1]/255,col2rgb("#00bc8c")[2]/255,col2rgb("#00bc8c")[3]/255, 0.25),
rgb(col2rgb("#3498db")[1]/255,col2rgb("#3498db")[2]/255,col2rgb("#3498db")[3]/255, 0.25)), width = 5) )}),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, fixedrange = TRUE, ticks = "", gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color="#3498db"), title = NA, fixedrange = TRUE, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25,
range = c(min(data_plot_swimming_hr$hr)-5, max(data_plot_swimming_hr$hr_max)+5), tickvals = c(hr1, hr2, hr3, hr4), ticktext = paste0(as.character(c(hr1, hr2, hr3, hr4)), " bpm")),
margin = list(l = 25, r = 0, t = 0, b = 0))
##------------##
##--MAP-LAST--##
##------------##
df_swimming_sub <- df_swimming %>% filter(id %in% unique(df_swimming_365$id)) %>% filter(id == (df_swimming_365 %>% group_by(id) %>% arrange(date) %>% slice_tail(n = 1) %>% ungroup() %>% filter(date == max(date, na.rm = TRUE)) %>% tail(1) %>% pull(id)))
plot_map1_swimming <- leaflet() %>% addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(minZoom = 11, maxZoom = 17))
if (sum(df_swimming_sub$geo) > 0) {
plot_map1_swimming <- leaflet(df_swimming_sub) %>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(minZoom = 11, maxZoom = 17)) %>%
addPolylines(lng = df_swimming_sub$lng, lat = df_swimming_sub$lat, color = "#3498db", weight = 2.5, opacity = 1.00)
} else {
plot_map1_swimming <- plot_map1_swimming %>%
setView(lng = 4.4143406907972675, lat = 51.212214294738565, zoom = 13) %>%
addPopups(4.4143406907972675, 51.212214294738565, "No data found", options = popupOptions(closeButton = FALSE))
}
##------------##
##--MAP-FAST--##
##------------##
df_swimming_sub <- df_swimming %>% filter(id %in% unique(df_swimming_365$id)) %>% filter(id == (df_swimming_365 %>% group_by(id) %>% arrange(speed) %>% slice_tail(n = 1) %>% ungroup() %>% filter(speed == max(speed, na.rm = TRUE)) %>% tail(1) %>% pull(id)))
plot_map2_swimming <- leaflet() %>% addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(minZoom = 11, maxZoom = 17))
if (sum(df_swimming_sub$geo) > 0) {
plot_map2_swimming <- leaflet(df_swimming_sub) %>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(minZoom = 11, maxZoom = 17)) %>%
addPolylines(lng = df_swimming_sub$lng, lat = df_swimming_sub$lat, color = "#3498db", weight = 2.5, opacity = 1.00)
} else {
plot_map2_swimming <- plot_map2_swimming %>%
setView(lng = 4.4143406907972675, lat = 51.212214294738565, zoom = 13) %>%
addPopups(4.4143406907972675, 51.212214294738565, "No data found", options = popupOptions(closeButton = FALSE))
}
##------------##
##--MAP-LONG--##
##------------##
df_swimming_sub <- df_swimming %>% filter(id %in% unique(df_swimming_365$id))  %>% filter(id == (df_swimming_365 %>% group_by(id) %>% arrange(distance) %>% slice_tail(n = 1) %>% ungroup() %>% filter(distance == max(distance, na.rm = TRUE)) %>% tail(1) %>% pull(id)))
plot_map3_swimming <- leaflet() %>% addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(minZoom = 11, maxZoom = 17))
if (sum(df_swimming_sub$geo) > 0) {
plot_map3_swimming <- leaflet(df_swimming_sub) %>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(minZoom = 11, maxZoom = 17)) %>%
addPolylines(lng = df_swimming_sub$lng, lat = df_swimming_sub$lat, color = "#3498db", weight = 2.5, opacity = 1.00)
} else {
plot_map3_swimming <- plot_map3_swimming %>%
setView(lng = 4.4143406907972675, lat = 51.212214294738565, zoom = 13) %>%
addPopups(4.4143406907972675, 51.212214294738565, "No data found", options = popupOptions(closeButton = FALSE))
}
# Clean global environment
suppressWarnings({
rm(df, request, temp, url, i, access_token, saved_id, df_clean,
df_clean_running, df_clean_running_temp, df_clean_running_add,
df_clean_cycling, df_clean_cycling_temp, df_clean_cycling_add,
df_clean_swimming, df_clean_swimming_temp, df_clean_swimming_add,
add, extra_days, line_data, row0, week_53_rows, year_dates, year_months, col, days_needed,
first_date, first_day, first_distance, first_hr, first_pace, first_speed, first_time,
id_value, last_date, last_day_of_week, last_match, missing_cols, unique_ids)
})
##-------#######-------##
##-------DATASET-------##
##-------#######-------##
# Subset dataframes for plotting
overview_running <- df_running_all |> arrange(desc(date)) |> mutate(pace = sprintf("%02d:%02d", floor(pace), round((pace %% 1) * 60)), time = round(time/60,0), date = format(as.Date(date), "%y-%m-%d"), distance = format(round(distance/1000,1),1)) |> select(date, km = distance, pace, hr)
overview_cycling <- df_cycling_all |> arrange(desc(date)) |> mutate(speed = format(round(speed,1),1), time = round(time/60,0), date = format(as.Date(date), "%y-%m-%d"), distance = format(round(distance/1000,1),1)) |> select(date, km = distance, speed, hr)
overview_swimming <- df_swimming_all |> arrange(desc(date)) |> mutate(pace = pace/10, pace = sprintf("%02d:%02d", floor(pace), round((pace %% 1) * 60)), time = round(time/60,0), date = format(as.Date(date), "%y-%m-%d"), distance = format(round(distance,1),1)) |> select(date, meter = distance, pace, hr)
# Running distance
plot_overview_running1 <-
plot_ly(overview_running, x = ~date,
y = ~km,
type = 'scatter',
mode = 'markers',
name = "Distance (km)",
marker = list(color = "#54b98f"),
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>Distance:", km, "km"),# "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/km"), "<br>Speed:", paste0(round(speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#54b98f"),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color="#54b98f"), ticksuffix = " km", fixedrange = TRUE, title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25),
margin = list(l = 0, r = 0, t = 0, b = 0)); plot_overview_running1
# Running pace
plot_overview_running2 <-
plot_ly(overview_running, x = ~date,
y = ~pace,
type = 'scatter',
mode = 'markers',
name = "Distance (km)",
marker = list(color = "#54b98f"),
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>Pace:", pace, "min/km"),# "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/km"), "<br>Speed:", paste0(round(speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#54b98f"),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color="#54b98f"), ticksuffix = " min/km", fixedrange = TRUE, title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25),
margin = list(l = 0, r = 0, t = 0, b = 0)); plot_overview_running2
# Running hr
plot_overview_running3 <-
plot_ly(overview_running, x = ~date,
y = ~hr,
type = 'scatter',
mode = 'markers',
name = "Distance (km)",
marker = list(color = "#54b98f"),
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>HR:", hr, "bpm"),# "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/km"), "<br>Speed:", paste0(round(speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#54b98f"),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color="#54b98f"), ticksuffix = " bpm", fixedrange = TRUE, title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25),
margin = list(l = 0, r = 0, t = 0, b = 0)); plot_overview_running3
# Save data
save.image(file = "/Users/emmanueldockx/Dropbox/GitHub/emdockx.github.io/stravawattz.RData")
```{r}
subplot(
plot_ly(overview_running, x = ~date, y = ~km, type = 'scatter', mode = 'markers', name = "Distance (km)", marker = list(color = 'blue')),
plot_ly(overview_running, x = ~date, y = ~pace, type = 'scatter', mode = 'markers', name = "Pace", marker = list(color = 'green')),
plot_ly(overview_running, x = ~date, y = ~hr, type = 'scatter', mode = 'markers', name = "Heart Rate", marker = list(color = 'red')),
nrows = 3,
shareX = TRUE,
titleY = TRUE
)
subplot(
plot_overview_running1,
plot_overview_running2,
plot_overview_running3,
nrows = 3,
shareX = TRUE,
titleY = TRUE)
# Running distance
plot_overview_running1 <-
plot_ly(overview_running, x = ~date,
y = ~km,
type = 'scatter',
mode = 'markers',
name = "Distance (km)",
marker = list(color = "#54b98f", symbol="circle"),
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>Distance:", km, "km"),# "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/km"), "<br>Speed:", paste0(round(speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#54b98f"),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color="#54b98f"), ticksuffix = " km", fixedrange = TRUE, title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25),
margin = list(l = 0, r = 0, t = 0, b = 0)); plot_overview_running1
# Running pace
plot_overview_running2 <-
plot_ly(overview_running, x = ~date,
y = ~pace,
type = 'scatter',
mode = 'markers',
name = "Distance (km)",
marker = list(color = "#54b98f", symbol="diamond"),
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>Pace:", pace, "min/km"),# "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/km"), "<br>Speed:", paste0(round(speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#54b98f"),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color="#54b98f"), ticksuffix = " min/km", fixedrange = TRUE, title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25),
margin = list(l = 0, r = 0, t = 0, b = 0)); plot_overview_running2
# Running hr
plot_overview_running3 <-
plot_ly(overview_running, x = ~date,
y = ~hr,
type = 'scatter',
mode = 'markers',
name = "Distance (km)",
marker = list(color = "#54b98f", symbol="star"),
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>HR:", hr, "bpm"),# "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/km"), "<br>Speed:", paste0(round(speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#54b98f"),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color="#54b98f"), ticksuffix = " bpm", fixedrange = TRUE, title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25),
margin = list(l = 0, r = 0, t = 0, b = 0)); plot_overview_running3
plot_overview_running3
/
# Save data
save.image(file = "/Users/emmanueldockx/Dropbox/GitHub/emdockx.github.io/stravawattz.RData")
# Running pace
plot_overview_running2 <-
plot_ly(overview_running, x = ~date,
y = ~pace,
type = 'scatter',
mode = 'markers',
name = "Distance (km)",
marker = list(color = "#54b98f", symbol="star-triangle-up"),
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>Pace:", pace, "min/km"),# "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/km"), "<br>Speed:", paste0(round(speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#54b98f"),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color="#54b98f"), ticksuffix = " min/km", fixedrange = TRUE, title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25),
margin = list(l = 0, r = 0, t = 0, b = 0)); plot_overview_running2
plot_overview_running2
# Running distance
plot_overview_running1 <-
plot_ly(overview_running, x = ~date,
y = ~km,
type = 'scatter',
mode = 'markers',
name = "Distance (km)",
marker = list(color = "#54b98f", symbol="circle-dot"),
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>Distance:", km, "km"),# "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/km"), "<br>Speed:", paste0(round(speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#54b98f"),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color="#54b98f"), ticksuffix = " km", fixedrange = TRUE, title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25),
margin = list(l = 0, r = 0, t = 0, b = 0)); plot_overview_running1
# Running pace
plot_overview_running2 <-
plot_ly(overview_running, x = ~date,
y = ~pace,
type = 'scatter',
mode = 'markers',
name = "Distance (km)",
marker = list(color = "#54b98f", symbol="star-triangle-up-dot"),
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>Pace:", pace, "min/km"),# "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/km"), "<br>Speed:", paste0(round(speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#54b98f"),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color="#54b98f"), ticksuffix = " min/km", fixedrange = TRUE, title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25),
margin = list(l = 0, r = 0, t = 0, b = 0)); plot_overview_running2
# Running hr
plot_overview_running3 <-
plot_ly(overview_running, x = ~date,
y = ~hr,
type = 'scatter',
mode = 'markers',
name = "Distance (km)",
marker = list(color = "#54b98f", symbol="star-dot"),
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>HR:", hr, "bpm"),# "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/km"), "<br>Speed:", paste0(round(speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#54b98f"),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color="#54b98f"), ticksuffix = " bpm", fixedrange = TRUE, title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25),
margin = list(l = 0, r = 0, t = 0, b = 0)); plot_overview_running3
plot_overview_running2
plot_overview_running3
# Running distance
plot_overview_running1 <-
plot_ly(overview_running, x = ~date,
y = ~km,
type = 'scatter',
mode = 'markers',
name = "Distance (km)",
marker = list(color = "#54b98f", symbol="circle-dot"),
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>Distance:", km, "km"),# "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/km"), "<br>Speed:", paste0(round(speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#54b98f"),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color="#54b98f"), ticksuffix = "km", fixedrange = TRUE, title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25),
margin = list(l = 0, r = 0, t = 0, b = 0)); plot_overview_running1
# Running pace
plot_overview_running2 <-
plot_ly(overview_running, x = ~date,
y = ~pace,
type = 'scatter',
mode = 'markers',
name = "Distance (km)",
marker = list(color = "#54b98f", symbol="star-triangle-up-dot"),
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>Pace:", pace, "min/km"),# "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/km"), "<br>Speed:", paste0(round(speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#54b98f"),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color="#54b98f"), ticksuffix = "/km", fixedrange = TRUE, title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25),
margin = list(l = 0, r = 0, t = 0, b = 0)); plot_overview_running2
# Running hr
plot_overview_running3 <-
plot_ly(overview_running, x = ~date,
y = ~hr,
type = 'scatter',
mode = 'markers',
name = "Distance (km)",
marker = list(color = "#54b98f", symbol="star-dot"),
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>HR:", hr, "bpm"),# "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/km"), "<br>Speed:", paste0(round(speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#54b98f"),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color="#54b98f"), ticksuffix = "bpm", fixedrange = TRUE, title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25),
margin = list(l = 0, r = 0, t = 0, b = 0)); plot_overview_running3
# Save data
save.image(file = "/Users/emmanueldockx/Dropbox/GitHub/emdockx.github.io/stravawattz.RData")
# Running distance
plot_overview_running1 <-
plot_ly(overview_running, x = ~date,
y = ~km,
type = 'scatter',
mode = 'markers',
name = "Distance (km)",
marker = list(color = "#54b98f", symbol="circle-dot"),
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>Distance:", km, "km"),# "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/km"), "<br>Speed:", paste0(round(speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#54b98f"),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color="#54b98f"), ticksuffix = "km", fixedrange = TRUE, title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25),
margin = list(l = 0, r = 0, t = 0, b = 0)); plot_overview_running1
# Running distance
plot_overview_running1 <-
plot_ly(overview_running, x = ~date,
y = ~km,
type = 'scatter',
mode = 'markers',
name = "Distance (km)",
marker = list(color = "#54b98f", symbol="circle-dot"),
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>Distance:", km, "km"),# "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/km"), "<br>Speed:", paste0(round(speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#54b98f"),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color="#54b98f"), ticksuffix = "km", fixedrange = TRUE, title = "km", visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25),
margin = list(l = 0, r = 0, t = 0, b = 0)); plot_overview_running1
# Running distance
plot_overview_running1 <-
plot_ly(overview_running, x = ~date,
y = ~km,
type = 'scatter',
mode = 'markers',
name = "Distance (km)",
marker = list(color = "#54b98f", symbol="circle-dot"),
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>Distance:", km, "km"),# "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/km"), "<br>Speed:", paste0(round(speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#54b98f"),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color="#54b98f"), ticksuffix = "km", fixedrange = TRUE, title = list("km", color="black"), visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25),
margin = list(l = 0, r = 0, t = 0, b = 0)); plot_overview_running1
# Running distance
plot_overview_running1 <-
plot_ly(overview_running, x = ~date,
y = ~km,
type = 'scatter',
mode = 'markers',
name = "Distance (km)",
marker = list(color = "#54b98f", symbol="circle-dot"),
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>Distance:", km, "km"),# "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/km"), "<br>Speed:", paste0(round(speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#54b98f"),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color="#54b98f"), ticksuffix = "km", fixedrange = TRUE, title = list(title = "km", color="black"), visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25),
margin = list(l = 0, r = 0, t = 0, b = 0)); plot_overview_running1
# Running distance
plot_overview_running1 <-
plot_ly(overview_running, x = ~date,
y = ~km,
type = 'scatter',
mode = 'markers',
name = "Distance (km)",
marker = list(color = "#54b98f", symbol="circle-dot"),
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>Distance:", km, "km"),# "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/km"), "<br>Speed:", paste0(round(speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#54b98f"),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color="#54b98f"), ticksuffix = "km", fixedrange = TRUE, title = "km", visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25),
margin = list(l = 0, r = 0, t = 0, b = 0)); plot_overview_running1
# Running distance
plot_overview_running1 <-
plot_ly(overview_running, x = ~date,
y = ~km,
type = 'scatter',
mode = 'markers',
name = "Distance (km)",
marker = list(color = "#54b98f", symbol="circle-dot"),
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>Distance:", km, "km"),# "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/km"), "<br>Speed:", paste0(round(speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#54b98f"),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color="#54b98f"), fixedrange = TRUE, title = "km", visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25),
margin = list(l = 0, r = 0, t = 0, b = 0)); plot_overview_running1
# Running distance
plot_overview_running1 <-
plot_ly(overview_running, x = ~date,
y = ~km,
type = 'scatter',
mode = 'markers',
name = "Distance (km)",
marker = list(color = "#54b98f", symbol="circle-dot"),
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>Distance:", km, "km"),# "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/km"), "<br>Speed:", paste0(round(speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#54b98f"),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color="#54b98f"), fixedrange = TRUE, title = "km", visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25),
margin = list(l = 0, r = 0, t = 0, b = 0)); plot_overview_running1
plot_overview_running1
# Running distance
plot_overview_running1 <-
plot_ly(overview_running, x = ~date,
y = ~km,
type = 'scatter',
mode = 'markers',
name = "Distance (km)",
marker = list(color = "#54b98f", symbol="circle-dot"),
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>Distance:", km, "km"),# "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/km"), "<br>Speed:", paste0(round(speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#54b98f"),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
#yaxis = list(tickfont = list(size=10, color="#54b98f"), ticksuffix = "km", fixedrange = TRUE, title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25),
margin = list(l = 0, r = 0, t = 0, b = 0)); plot_overview_running1
# Running distance
plot_overview_running1 <-
plot_ly(overview_running %>% mutate(km = as.numeric(km)), x = ~date,
y = ~km,
type = 'scatter',
mode = 'markers',
name = "Distance (km)",
marker = list(color = "#54b98f", symbol="circle-dot"),
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>Distance:", km, "km"),# "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/km"), "<br>Speed:", paste0(round(speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#54b98f"),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
#yaxis = list(tickfont = list(size=10, color="#54b98f"), ticksuffix = "km", fixedrange = TRUE, title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25),
margin = list(l = 0, r = 0, t = 0, b = 0)); plot_overview_running1
# Running distance
plot_overview_running1 <-
plot_ly(overview_running %>% mutate(km = as.numeric(km)), x = ~date,
y = ~km,
type = 'scatter',
mode = 'markers',
name = "Distance (km)",
marker = list(color = "#54b98f", symbol="circle-dot"),
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>Distance:", km, "km"),# "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/km"), "<br>Speed:", paste0(round(speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#54b98f"),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color="#54b98f"), ticksuffix = "km", fixedrange = TRUE, title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25),
margin = list(l = 0, r = 0, t = 0, b = 0)); plot_overview_running1
# Running distance
plot_overview_running1 <-
plot_ly(overview_running %>% mutate(km = as.numeric(km)), x = ~date,
y = ~km,
type = 'scatter',
mode = 'markers',
name = "Distance (km)",
marker = list(color = "#54b98f", symbol="circle-dot"),
text = ~paste(wday(date, label = TRUE, abbr = FALSE, week_start = 1), format(as.Date(date), "%d/%m/%y"), "</b><br>Distance:", km, "km"),# "<br>Time:", round(time, 0), "min", "<br>Pace:", paste0(floor(pace <- pace), ":", ifelse(round((pace %% 1) * 60) < 10, paste0("0", round((pace %% 1) * 60)), round((pace %% 1) * 60)), "/km"), "<br>Speed:", paste0(round(speed, 1), "km/h"), "<br>Avg. HR:", round(hr, 0), "bpm", "<br>Max. HR:", round(hr_max, 0), "bpm"),
hoverinfo = 'text', textposition = "none", opacity = 0.97) |>
config(displayModeBar = FALSE, staticPlot = FALSE) |>
layout(paper_bgcolor="#2d2d2d", plot_bgcolor="#2d2d2d", hoverlabel = list(font = list(color = "white"), bgcolor = "#2d2d2d", bordercolor = "#54b98f"),
xaxis = list(title = NA, visible = TRUE, showticklabels = FALSE, ticks = "", fixedrange = TRUE, gridcolor = "transparent", gridwidth = 0.25),
yaxis = list(tickfont = list(size=10, color="#54b98f"), ticksuffix = " km", fixedrange = TRUE, title = NA, visible = TRUE, showticklabels = TRUE, ticks = "", side ="top", gridcolor = "#333", gridwidth = 0.25),
margin = list(l = 0, r = 0, t = 0, b = 0)); plot_overview_running1
